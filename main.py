from fastapi import FastAPI, File, UploadFile
from fastapi.responses import HTMLResponse, FileResponse
from fastapi.middleware.cors import CORSMiddleware

from typing import Annotated, Union
from pathlib import Path

import uvicorn

app = FastAPI()

# CORS (Cross-Origin Resource Sharing) is a standard for accessing web resources on different domains.
# This is an example of how to enable CORS in FastAPI.
origins = [
    "http://localhost:3000",  # Add your origins here
]

app.add_middleware(
    CORSMiddleware,
    allow_origins=origins,
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)


# API Docs with Swagger are available at: http://127.0.0.1:8000/docs
# also alternative API docs are autogenerated too at: http://127.0.0.1:8000/redoc

@app.get("/")
# Check it with: http://127.0.0.1:8000
def read_root():
    return {"Hello": "World"}

@app.get("/items/{item_id}")
# Check it with: http://127.0.0.1:8000/items/5?q=somequery
def read_item(item_id: int, q: Union[str, None] = None):
    return {"item_id": item_id, "q": q}

@app.post("/filesize/")
async def create_file(file: Annotated[bytes, File()]):
    return {"file_size": len(file)}

@app.post("/uploadfile/")
async def create_upload_file(file: UploadFile):
    return {"filename": file.filename}


@app.get("/firmwareUploader/")
async def main():
    content = """
<body>
<form action="/files/" enctype="multipart/form-data" method="post">
<input name="files" type="file" multiple>
<input type="submit">
</form>
<form action="/uploadfiles/" enctype="multipart/form-data" method="post">
<input name="files" type="file" multiple>
<input type="submit">
</form>
</body>
    """
    return HTMLResponse(content=content)


file_name = "firmware.bin"
@app.get("/downloadFirmware")
async def download_file():
    file_path = Path(file_name)

    if file_path.is_file():
        return FileResponse(path=file_path, filename=file_name)
    else:
        return {"error": f"File '{file_name}' not found."}
    

if __name__ == '__main__':
    uvicorn.run("main:app",
                host="0.0.0.0",
                port=8432,
                reload=True,
                ssl_keyfile="./key.pem", 
                ssl_certfile="./cert.pem"
                )